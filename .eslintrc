// .eslintrc
{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
      "useJSXTextNode": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "extends": [
    "airbnb-typescript",
    "airbnb/hooks",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended",
    "prettier",
    "plugin:prettier/recommended"
  ],
  "plugins": ["react", "react-hooks", "@typescript-eslint", "jest", "import"],
  "env": {
    "browser": true,
    "es6": true,
    "jest": true
  },
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "rules": {
    "linebreak-style": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-function-return-type": [
      "off",
      {
        "allowExpressions": false
      }
    ],
    "prettier/prettier": [
      "error",
      {
        "trailingComma": "es5",
        "singleQuote": true,
        "printWidth": 100,
        "semi": true,
        "endOfLine": "auto"
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "no-console": ["warn", { "allow": ["warn", "error"] }],

    // Almost all code checks if the used value is defined
    "react/require-default-props": "off",
    "react/destructuring-assignment": "off",
    // Makes code too verbose
    "react/jsx-props-no-spreading": "off",
    // We don't use prop-types, try to convert .jsx to .tsx
    "react/prop-types": "off",

    // New v17 transform does not require React import
    "react/react-in-jsx-scope": "off",

    // Harms readability
    "react/state-in-constructor": "off",

    // Conflicts with some RN comps
    "react/style-prop-object": "off",

    // Harms readability
    "no-plusplus": "off",
    // Omit ForOfStatement from
    // https://github.com/airbnb/javascript/blob/63098cbb6c05376dbefc9a91351f5727540c1ce1/packages/eslint-config-airbnb-base/rules/style.js#L339
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],

    // Used in floating promises
    "no-void": "off",

    // Shouldn't error out in some cases (pluck out a prop)
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "varsIgnorePattern": "^_.+", "argsIgnorePattern": "^_.+" }
    ],
    // Mainly encountered in react-hook-form, works fine there
    "@typescript-eslint/unbound-method": "off",

    // Improves code readability
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error"
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/explicit-function-return-type": "off"
      }
    }
  ]
}
